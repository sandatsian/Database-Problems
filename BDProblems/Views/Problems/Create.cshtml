@model BDProblems.Problem

@{
    ViewData["Title"] = "Create new problem";
}

    <p><h1>Create your Problem</h1></p>

<h4>Problem</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="form-group">
                <label asp-for="Statement" class="control-label"></label>
                <textarea class="form-control" asp-for="Statement" rows="4"></textarea>
                <span asp-validation-for="Statement" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Solution" class="control-label"></label>
                <textarea class="form-control" asp-for="Solution" rows="4"></textarea>
                <span asp-validation-for="Solution" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="SourceId" class="control-label"></label>
                <select asp-for="SourceId" class="form-control" asp-items="@ViewBag.SourceId"></select>
            </div>
            <div class="form-group">
                <label asp-for="LevelId" class="control-label"></label>
                <select asp-for="LevelId" class="form-control" asp-items="@ViewBag.LevelId"></select>
            </div>
            <input type ="hidden" value="@ViewBag.ThemeId" name="themeId" />
            <div>
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
